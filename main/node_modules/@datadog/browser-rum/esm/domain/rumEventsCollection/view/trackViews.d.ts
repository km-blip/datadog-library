import { LifeCycle } from '../../lifeCycle';
import { EventCounts } from '../../trackEventCounts';
import { Timings } from './trackTimings';
export interface View {
    id: string;
    location: Location;
    referrer: string;
    timings: Timings;
    eventCounts: EventCounts;
    documentVersion: number;
    startTime: number;
    duration: number;
    loadingTime?: number | undefined;
    loadingType: ViewLoadingType;
    cumulativeLayoutShift?: number;
}
export interface ViewCreatedEvent {
    id: string;
    location: Location;
    referrer: string;
    startTime: number;
}
export declare enum ViewLoadingType {
    INITIAL_LOAD = "initial_load",
    ROUTE_CHANGE = "route_change"
}
export declare const THROTTLE_VIEW_UPDATE_PERIOD = 3000;
export declare const SESSION_KEEP_ALIVE_INTERVAL: number;
export declare function trackViews(location: Location, lifeCycle: LifeCycle): {
    stop(): void;
};
